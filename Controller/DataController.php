<?php

namespace App\Controller;
use App\Entity\Users;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\Routing\Annotation\Route;

//////////////
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Component\Form\Extension\Core\Type\EmailType;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\RepeatedType;
use Symfony\Component\Form\Extension\Core\Type\PasswordType;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\HttpFoundation\Request;

use Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface;

//////////////////////

class DataController extends AbstractController
{

    
        /**
        * @Route("/")
        * Method({"GET", "POST"})
        */
        public function new(Request $request)
        {   
            $user = new users();
            $user->setName('Podaj imie');
            $user->setSname('Podaj nazwisko');
    
            $form = $this->createFormBuilder($user)
                ->add('Name', TextType::class)
                ->add('Sname', TextType::class)
                ->add('file', FileType::class)
                ->add('save', SubmitType::class, array('label' => 'Create Task'))
                ->getForm();
            
            $form->handleRequest($request);
            if ($form->isSubmitted()){

                // $entityManager = $this->getDoctrine()->getManager();
                // $entityManager->persist($user);
                // $entityManager->flush();

                

                $file = $form->get('file')->getData();
                var_dum($file);

                

                $fileName = $file->getClientOriginalName();

                $file->move(
                    $this->getParameter('brochures_directory'), ///////////////////
                    $fileName
                );
                $user->setFile($fileName);
            }

            

            

            return $this->render('control1/index.html.twig', array(
                'form' => $form->createView(), 'name' => $file
            ));

        

        }
    
    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    
    /**
     * @Route("/list", name="list")
     */
    public function show()
    {
        // you can fetch the EntityManager via $this->getDoctrine()
        // or you can add an argument to your action: index(EntityManagerInterface $entityManager)
        
        $users = $this->getDoctrine()
        ->getRepository(Users::class)
        ->findAll();

        // if (!$user) {
        //     throw $this->createNotFoundException(
        //     'No user found for id '.$id
        //     );
        // }

        return $this->render('data/show.html.twig', array('users' => $users));

    // or render a template
    // in the template, print things with {{ product.name }}
    // return $this->render('product/show.html.twig', ['product' => $product]);

        
    }


    /**
     * @Route("/data")
     */
    public function test()
    {
            
    

        return $this->render('data/index.html.twig');
    }

}
